services:
  postgres:
    image: postgres:15-alpine
    container_name: juscash_postgres
    environment:
      POSTGRES_DB: jus_db
      POSTGRES_USER: jus_user
      POSTGRES_PASSWORD: jus_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U jus_user -d jus_db"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  migrate:
    build:
      context: .
      dockerfile: scraper/Dockerfile
    container_name: juscash_migrate
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: jus_db
      DB_USER: jus_user
      DB_PASSWORD: jus_password
      DB_ECHO: "false"
      DATABASE_URL: postgresql+asyncpg://jus_user:jus_password@postgres:5432/jus_db
      PYTHONPATH: /app/src
    depends_on:
      postgres:
        condition: service_healthy
    command: ["poetry", "run", "alembic", "-c", "alembic.ini", "upgrade", "head"]
    volumes:
      - ./scraper:/app
      - ./logs:/app/logs
    restart: "no"

  scraper:
    build:
      context: .
      dockerfile: scraper/Dockerfile
    container_name: juscash_app
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: jus_db
      DB_USER: jus_user
      DB_PASSWORD: jus_password
      DB_ECHO: "false"
      DB_POOL_SIZE: 10
      DB_MAX_OVERFLOW: 20
      LOG_LEVEL: INFO
      DATABASE_URL: postgresql+asyncpg://jus_user:jus_password@postgres:5432/jus_db
      PYTHONPATH: /app/src
    depends_on:
      postgres:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
    command: ["sh", "entrypoint.sh"]
    volumes:
      - ./scraper:/app
      - ./logs:/app/logs
      - ./data:/app/data
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  default:
    name: juscash_network
