services:
  postgres:
    image: postgres:15-alpine
    container_name: scraper_postgres
    environment:
      POSTGRES_DB: scraper_db
      POSTGRES_USER: scraper_user
      POSTGRES_PASSWORD: secure_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U scraper_user -d scraper_db"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  migrate:
    build:
      context: .
      dockerfile: scraper/Dockerfile
    container_name: scraper_migrate
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: scraper_db
      DB_USER: scraper_user
      DB_PASSWORD: secure_password
      DB_ECHO: "false"
      DATABASE_URL: postgresql+asyncpg://scraper_user:secure_password@postgres:5432/scraper_db # <--- IMPORTANT: Ensure your DB_URL is explicitly set for env.py
    depends_on:
      postgres:
        condition: service_healthy
    # command: ["python", "-c", "scraper/alembic.ini", "upgrade", "head"] # <--- REMOVE OR COMMENT THIS
    volumes:
      - ./logs:/app/logs
      - ./scraper:/app/scraper # <--- ADD THIS LINE! This is the fix.
    restart: "no" # Good for one-off migration runs

  scraper:
    build:
      context: .
      dockerfile: scraper/Dockerfile
    container_name: scraper_app
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: scraper_db
      DB_USER: scraper_user
      DB_PASSWORD: secure_password
      DB_ECHO: "false"
      DB_POOL_SIZE: 10
      DB_MAX_OVERFLOW: 20
      LOG_LEVEL: INFO
      DATABASE_URL: postgresql+asyncpg://scraper_user:secure_password@postgres:5432/scraper_db # <--- IMPORTANT: Ensure your DB_URL is explicitly set for app
    depends_on:
      postgres:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
      - ./scraper:/app/scraper # <--- Also good to add this to the app service for live code changes
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  default:
    name: scraper_network
